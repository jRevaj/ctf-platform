# Generated by Django 5.2 on 2025-05-06 09:44

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('challenges', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_team_size', models.PositiveIntegerField(default=3, help_text='Maximum number of players allowed in a team')),
                ('number_of_tiers', models.PositiveIntegerField(default=3, help_text='Number of tiers to use in matchmaking')),
                ('allow_team_changes', models.BooleanField(default=True, help_text='Whether players can change teams outside of games')),
                ('enable_auto_container_shutdown', models.BooleanField(default=True, help_text='Whether to automatically shut down inactive containers')),
                ('inactive_container_timeout', models.PositiveIntegerField(default=30, help_text='Number of minutes to wait before stopping an inactive container')),
                ('previous_targets_check_count', models.PositiveIntegerField(default=1, help_text='Number of previous sessions to check when preventing teams from attacking recent targets')),
            ],
            options={
                'verbose_name': 'Global Settings',
                'verbose_name_plural': 'Global Settings',
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for this game session', max_length=128, unique=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('rotation_period', models.PositiveIntegerField(help_text='Period in days')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed')], default='planned', max_length=16)),
                ('enable_time_restrictions', models.BooleanField(default=False, help_text='Whether to enable time restrictions for accessing deployments')),
                ('max_blue_team_time', models.PositiveIntegerField(default=120, help_text='Maximum time in minutes that a blue team can spend securing a deployment (0 means no limit)')),
                ('max_red_team_time', models.PositiveIntegerField(default=0, help_text='Maximum time in minutes that a red team can spend attacking a deployment (0 means no limit)')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='game_sessions', to='challenges.challengetemplate')),
            ],
            options={
                'verbose_name': 'Game Session',
                'verbose_name_plural': 'Game Sessions',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=128, unique=True)),
                ('points', models.IntegerField(default=100)),
                ('placeholder', models.CharField(blank=True, default='', max_length=128)),
                ('hint', models.TextField(blank=True, default='')),
                ('is_captured', models.BooleanField(default=False)),
                ('captured_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('captured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captured_flags', to='accounts.team')),
                ('captured_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captured_flags', to=settings.AUTH_USER_MODEL)),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='challenges.challengecontainer')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_flags', to='accounts.team')),
            ],
            options={
                'verbose_name': 'Flag',
                'verbose_name_plural': 'Flags',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['value'], name='ctf_flag_value_6bc6ac_idx')],
            },
        ),
        migrations.CreateModel(
            name='GamePhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed')], default='planned', max_length=16)),
                ('phase_name', models.CharField(choices=[('blue', 'Blue'), ('red', 'Red')], default='blue', max_length=8)),
                ('start_date', models.DateTimeField(help_text='Start date of this game phase')),
                ('end_date', models.DateTimeField(help_text='End date of this game phase')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases', to='ctf.gamesession')),
            ],
            options={
                'verbose_name': 'Game Phase',
                'verbose_name_plural': 'Game Phases',
                'ordering': ['-start_date'],
                'unique_together': {('session', 'phase_name')},
            },
        ),
        migrations.CreateModel(
            name='TeamAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('role', models.CharField(choices=[('blue', 'Blue'), ('red', 'Red')], default='blue', max_length=8)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='challenges.challengedeployment')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_assignments', to='ctf.gamesession')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='accounts.team')),
            ],
            options={
                'verbose_name': 'Team Assignment',
                'verbose_name_plural': 'Team Assignments',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['session', 'team'], name='ctf_teamass_session_5e0bc0_idx'), models.Index(fields=['session', 'deployment'], name='ctf_teamass_session_5c7e68_idx')],
            },
        ),
    ]
